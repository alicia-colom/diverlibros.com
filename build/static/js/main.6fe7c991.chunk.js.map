{"version":3,"sources":["form.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Form","useState","fullName","email","message","sent","buttonText","err","data","setData","handleChange","e","target","name","value","console","log","resetForm","FormControl","fullWidth","TextField","required","label","variant","id","className","onChange","multiline","rows","style","padding","Grid","container","spacing","Button","color","onClick","preventDefault","axios","post","then","res","result","setTimeout","catch","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAuIeA,EAhIF,WAAM,MAEMC,mBAAS,CAChCC,SAAU,GACVC,MAAO,GACPC,QAAS,GACTC,MAAM,EACNC,WAAY,SACZC,IAAK,KARY,mBAEXC,EAFW,KAELC,EAFK,KAWZC,EAAe,SAACC,GAAY,IAAD,EACRA,EAAEC,OAAlBC,EADwB,EACxBA,KAAMC,EADkB,EAClBA,MACdL,EAAQ,2BACJD,GADG,kBAELK,EAAOC,KAETC,QAAQC,IAAIR,IAIPS,EAAY,WACjBR,EAAQ,CACPP,SAAU,GACVC,MAAO,GACPC,QAAS,GACTC,MAAM,EACNC,WAAY,SACZC,IAAK,MA+CP,OACC,qCACC,cAACW,EAAA,EAAD,CAAaC,WAAW,EAAxB,SACC,cAACC,EAAA,EAAD,CACCC,UAAQ,EACRC,MAAM,YACNC,QAAQ,SACRC,GAAG,YACHX,KAAK,WACLY,UAAU,aACVX,MAAON,EAAKN,SACZwB,SAAUhB,MAGZ,cAACQ,EAAA,EAAD,CAAaC,WAAW,EAAxB,SACC,cAACC,EAAA,EAAD,CACCC,UAAQ,EACRC,MAAM,QACNE,GAAG,QACHX,KAAK,QACLU,QAAQ,SACRE,UAAU,aACVX,MAAON,EAAKL,MACZuB,SAAUhB,MAGZ,cAACQ,EAAA,EAAD,CAAaC,WAAW,EAAxB,SACC,cAACC,EAAA,EAAD,CACCC,UAAQ,EACRC,MAAM,UACNC,QAAQ,SACRV,KAAK,UACLc,WAAW,EACXC,KAAK,KACLd,MAAON,EAAKJ,QACZsB,SAAUhB,MAGZ,cAACQ,EAAA,EAAD,UACC,qBAAKW,MAAO,CAAEC,QAAS,IAAvB,SACC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACC,qBAAKR,UAAU,cAAf,SACC,cAACS,EAAA,EAAD,CAAQX,QAAQ,YAAYY,MAAM,UAAUC,QApF/B,SAACzB,GACnBA,EAAE0B,iBAEF5B,EAAQ,2BACJD,GADG,IAENF,WAAY,iBAGbgC,IACEC,KAAK,gBAAiB/B,GACtBgC,MAAK,SAACC,GACkB,YAApBA,EAAIjC,KAAKkC,QACZjC,EAAQ,2BACJD,GADG,IAENF,WAAY,kBACZD,MAAM,EACNE,IAAK,UAENoC,YAAW,WACV1B,MACE,OAEHR,EAAQ,2BACJD,GADG,IAENH,MAAM,EACNC,WAAY,UACZC,IAAK,aAENoC,YAAW,WACV1B,MACE,SAGJ2B,OAAM,SAACrC,GACPE,EAAQ,2BACJD,GADG,IAENF,WAAY,uBACZC,IAAK,cA+CH,SACEC,EAAKF,yBCjHCuC,MARf,WACC,OACC,qBAAKpB,UAAU,MAAf,SACC,cAAC,EAAD,OCOYqB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6fe7c991.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\n\nconst Form = () => {\n\t// State\n\tconst [data, setData] = useState({\n\t\tfullName: '',\n\t\temail: '',\n\t\tmessage: '',\n\t\tsent: false,\n\t\tbuttonText: 'Enviar',\n\t\terr: '',\n\t});\n\n\tconst handleChange = (e: any) => {\n\t\tconst { name, value } = e.target;\n\t\tsetData({\n\t\t\t...data,\n\t\t\t[name]: value,\n\t\t});\n\t\tconsole.log(data);\n\t};\n\n\t// Reset function\n\tconst resetForm = (): void => {\n\t\tsetData({\n\t\t\tfullName: '',\n\t\t\temail: '',\n\t\t\tmessage: '',\n\t\t\tsent: false,\n\t\t\tbuttonText: 'Submit',\n\t\t\terr: '', // Este campo servirÃ­a para cargar otro componente (por ejemplo una modal con el texto \"Vuelve a intentarlo\") en base al valor de err.\n\t\t});\n\t};\n\n\t// Submit function\n\tconst formSubmit = (e: any) => {\n\t\te.preventDefault();\n\n\t\tsetData({\n\t\t\t...data,\n\t\t\tbuttonText: 'Enviando...',\n\t\t});\n\n\t\taxios\n\t\t\t.post('/api/sendmail', data)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.data.result !== 'success') {\n\t\t\t\t\tsetData({\n\t\t\t\t\t\t...data,\n\t\t\t\t\t\tbuttonText: 'Fallo al enviar',\n\t\t\t\t\t\tsent: false,\n\t\t\t\t\t\terr: 'fail',\n\t\t\t\t\t});\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tresetForm();\n\t\t\t\t\t}, 3000);\n\t\t\t\t} else {\n\t\t\t\t\tsetData({\n\t\t\t\t\t\t...data,\n\t\t\t\t\t\tsent: true,\n\t\t\t\t\t\tbuttonText: 'Enviado',\n\t\t\t\t\t\terr: 'success',\n\t\t\t\t\t});\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tresetForm();\n\t\t\t\t\t}, 3000);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetData({\n\t\t\t\t\t...data,\n\t\t\t\t\tbuttonText: 'Ha ocurrido un error',\n\t\t\t\t\terr: 'fail',\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<FormControl fullWidth={true}>\n\t\t\t\t<TextField\n\t\t\t\t\trequired\n\t\t\t\t\tlabel=\"Full name\"\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tid=\"full-name\"\n\t\t\t\t\tname=\"fullName\"\n\t\t\t\t\tclassName=\"form-field\"\n\t\t\t\t\tvalue={data.fullName}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t</FormControl>\n\t\t\t<FormControl fullWidth={true}>\n\t\t\t\t<TextField\n\t\t\t\t\trequired\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tclassName=\"form-field\"\n\t\t\t\t\tvalue={data.email}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t</FormControl>\n\t\t\t<FormControl fullWidth={true}>\n\t\t\t\t<TextField\n\t\t\t\t\trequired\n\t\t\t\t\tlabel=\"Message\"\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tname=\"message\"\n\t\t\t\t\tmultiline={true}\n\t\t\t\t\trows=\"10\"\n\t\t\t\t\tvalue={data.message}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t</FormControl>\n\t\t\t<FormControl>\n\t\t\t\t<div style={{ padding: 20 }}>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<div className=\"form-submit\">\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={formSubmit}>\n\t\t\t\t\t\t\t\t{data.buttonText}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Grid>\n\t\t\t\t</div>\n\t\t\t</FormControl>\n\t\t</>\n\t);\n};\n\nexport default Form;\n","import React from 'react';\nimport './App.css';\nimport Form from './form';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Form />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}